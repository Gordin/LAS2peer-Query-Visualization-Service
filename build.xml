<project name="LAS2peer Query Visualization Service" default="QueryVisualizationService_jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<presetdef name="javac">
	    <javac includeantruntime="false" />
	</presetdef>
	
	<property name="src.main" location="java" />
	
    <property name="lib" location="lib" />
	<property name="tmp" location="tmp" />
	<property name="log" location="log" />
	
	<property name="tmp.classes" location="${tmp}/classes" />
	
	<property name="export" location="export" />
	<property name="export.doc" location="${export}/doc" />
	<property name="export.jars" location="${export}/jars" />
	
    <path id="libraries">
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
            <exclude name="junit-*.jar"/>
        </fileset>
    </path>
	
	<property name="lib.junit" location="${lib}/junit-4.11.jar" />
	
    <!-- Make sure Ivy is available -->
    <property name="ivy.install.version" value="2.3.0" />
    <property name="ivy.jar.dir" value="${basedir}/ivy" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    <property name="ivy.settings.file" value="${ivy.jar.dir}/ivysettings.xml" />
    <property name="ivy.dep.file" value="${ivy.jar.dir}/ivy.xml" />

    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}"/>
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
            dest="${ivy.jar.file}" usetimestamp="true" skipexisting="true"/>
    </target>

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="get_deps" depends="install-ivy" description="--> resolve dependencies">
        <ivy:settings>
            <credentials host="role.dbis.rwth-aachen.de:9911/archiva"  realm="Repository internal"/>
        </ivy:settings>
        <ivy:retrieve type="jar" />
    </target>
	
	
	<target name="init_general">
		<tstamp/>
		<mkdir dir="${tmp}" />
		<mkdir dir="${export}" />
        <mkdir dir="${log}" />
	</target>
	
	<target name="init_compile" depends="init_general">
		<mkdir dir="${tmp.classes}" />
	</target>
	
	<target name="init_jars" depends="init_general">
		<mkdir dir="${export.jars}" />
	</target>
	
	<target name="init_doc" depends="init_general">
		<mkdir dir="${export.doc}" />
	</target>
	
	<!-- compilation -->
	<target name="compile_main" depends="get_deps, init_compile">
		<javac srcdir="${src.main}"
		       destdir="${tmp.classes}"
			   classpathref="libraries"
			   debug="on"
			   source="1.7"
			   target="1.7"
			   encoding="UTF-8"
		/>
		<copy todir="${tmp.classes}">
			<fileset dir="${src.main}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="QueryVisualizationService_jar" depends="compile_main">
		<jar jarfile="${export.jars}/i5.las2peer.services.queryVisualization-0.0.1.jar">
			<fileset dir="${tmp.classes}"
				includes="i5/las2peer/services/queryVisualization/**">
			</fileset>
			<manifest>
				<attribute name="Library-Version" value="0.0.1" />
				<attribute name="Library-SymbolicName" value="i5.las2peer.services.queryVisualization" />
			</manifest>
		</jar>
		<!-- Add the same Jar to the lib directory !-->
		<jar jarfile="${lib}/i5.las2peer.services.queryVisualization-0.0.1.jar">
			<fileset dir="${tmp.classes}"
				includes="i5/las2peer/services/queryVisualization/**">
			</fileset>
			<manifest>
				<attribute name="Library-Version" value="0.0.1" />
				<attribute name="Library-SymbolicName" value="i5.las2peer.services.queryVisualization" />
			</manifest>
		</jar>
	</target>
	
	<target name="java_doc" depends="init_doc">
		<javadoc destdir="${export.doc}"
				 author="true"
				 version="true"
				 use="true"
				 source="1.7"
				 windowtitle="Query Visualization Service Documentation"
				 failonerror="yes"
				 encoding="utf8"
		   		 classpathref="libraries"
				 classpath="${tmp.classes}"
		>
			<packageset dir="${src.main}" defaultexcludes="yes">
				<include name="i5/las2peer/**" />
			</packageset>
		</javadoc>
	</target>

	<!-- general cleanup; don't run this if you want to see unit test results or logging data -->
	<target name="clean">
		<delete dir="${tmp}" />
		<delete dir=".las2peer" />
		  <delete includeemptydirs="true">
		    <fileset dir="${log}" includes="**/*"/>
		  </delete>
	</target>
	
	<target name="all" depends="QueryVisualizationService_jar, java_doc, clean" />
	
</project>